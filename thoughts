As entradas do dicionário estão dividas em:

PALAVRA        DEFINICAO
PALAVRA:
 - TERMO       DEFINICAO

 A PALAVRA E SUA DEFINICAO SE ENCONTRAM SEMPRE NA MESMA LINHA,
 SE HOUVER OS DOIS PONTOS, SIGNIFICA QUE TEREMOS A APLICACAO DESTA PALAVRA EM UMA FRASE.
 
 ENQUANTO FAZEMOS A DEFINICAO DO TERMO, A PALAVRA DEVE ESTAR CONTIDA NO INICIO DA LINHA, OU SEJA,
 QUANDO FORMOS LER A DEFINICAO OU O SIGNIFICADO DE UM TERMO, SÓ PARAMOS A LEITURA CASO EXISTA /^[word]

 NOS TERMOS CORRELACIONADOS A PALAVRA, SEMPRE COMEÇAM COM UM ESPACO, OU SEJA, TAMBÉM NÃO ESTÃO CONTIDOS
 NO INICIO DA LINHA, O QUE FACILITA O SEU RECONHECIMENTO E DA SUA DEFINICAO.
 ENTAO, DEFINICAO, SEJA DE TERMOS OU PALAVRAS, TERMINA SOMENTE QUANDO ENCONTRAR UMA PALAVRA NO INICIO DA OUTRA LINHA
 OU ENCONTRAR UM NOVO TERMO.
 
 OS TERMOS COMPREENDEM ALGUNS ESPACOS NA MARGEM.

 PALAVRAS NAO CONTEM NENHUM ESCAPE DAS MARGENS.

 O DICIONARIO ESTA DIVIDIDO EM ORDEM ALFABETICA, PODEMOS CRIAR UMA ARVORE DE PESQUISA PARA OS TERMOS,
 NO ENTANTO NÃO SEI SE SERIA UTIL, MAS SERIA UMA BOA FORMA DE ORGANIZAR.
NA REALIDADE NÃO, PORQUE SE É UM DICIONARIO A MANEIRA MAIS OBVIA DE ARMAZENAR E EM UM DICIONARIO MESMO

ENTAO O OBJETIVO DO PROJETO É: TRANSFORMAR O ARQUIVO DO DICIONARIO EM UM NOVO FORMATO, POR ISSO, NÃO SERA
NECESSARIO UMA ESTRUTURA DE DADOS PARA FAZER BUSCA DOS TERMOS EM MEMORIA.

TROCAR O SIMBOLO - POR +base NO ARQUIVO QUE SERÁ PRODUZIDO.

COLOCAR A LINGUA EM QUE O TERMO ESTEJA ESCRITO, COMO EN PARA INGLES E PT PARA PORTUGUES.

DEFINICAO SEPARADAS POR VÍRGULA OU PONTO E VÍRGULA, DEVERÃO SER IMPRESSAS SEPARADAMENTE.


__GRAMATICA__

BEGIN: DICIONARIO

DICIONARIO: SESSAO
            DICIONARIO SESSAO

SESSAO: IDENTIFICADOR LISTA_PALAVRAS

IDENTIFICADOR: letra

LISTA_PALAVRAS: PALAVRA
                LISTA_PALAVRAS PALAVRA

PALAVRA: PALAVRA_SIMPLES
         PALAVRA_COMPOSTA
        
PALAVRA_SIMPLES: NOME DEFINICAO

PALAVRA_COMPOSTA: NOME ':' DEFINICAO TERMOS
                  NOME ':' TERMOS 

NOME: texto

DEFINICAO: texto
           DEFINICAO ',' texto
           "vazio"

TERMOS: TERMO
        TERMOS TERMO

TERMO: '-' texto DEFINICAO
       texto '-' DEFINICAO
       texto '-' texto DEFINICAO


__OBSERVACOES__PARA__RELATORIO__

Eu tentei fazer funcionar com a estrutura descrita acima, mas não funcionou e era muito complexa para
debuggar, então deixei ela um pouco mais simples. E vou adicionando uma funcionalidade de cada vez.
Para referir a essas mudanças, estou criando pequenas partes do dicionário e testando determinada funcionalidade.

Consegui criar uma pequena versão que já funciona para o caso mais simples de todos, no entanto, precisamos 
resolver o seguinte problema:
Como ler strings que tenha somente um caracter de espaço no meio, para que consigamos diferenciar tais strings
de definição do termo, das strings de tradução.

Consegui resolver o problema dos espaços em branco no meio das palavras.
Agora podemos brincar com mais complexidade do lado da gramática.

Ajustei o FLEX para só começar a reconhecer o conteúdo do dicionário após encontrar o __BEGIN__.
Podemos usar desta ferramenta para outras coisas.
WORD para reconhecer termos do dicionário
DICT para limpar formatações desnecessárias.

Arrumei outro caso de uso, onde um termo pode ter mais de uma tradução possível.
E melhorei um pouco a organização da gramática. Adicionando espaços e imprimindo nos lugares adequados.



__TEMP__

A
ADP (automatic data processing)   processamento (m) automático de
                                   dados
absenteeism                       absenteísmo (m)
absorption costing                custeio (f) de absorção
abandonment:
 product -                        retirada (f) de um produto
above par                         com ágio; acima da paridade
acceleration clause               cláusula (f) de aceleração
acceptance:                       aceitação (f)
 brand -                          aceitação (f) de uma marca
 consumer -                       aceitação (f) por parte do consumidor
access:
 multi -                          acesso (m) múltiplo
 random -                         acesso (m) casual
account:
 bank -                           conta (f) bancária
 joint -                          conta (f) conjunta
B
backdate to              antecipar, pré-datar
bad debt                 dívida (f) duvidosa, dívida (f)
                          incobrável, empréstimo (m) em
                          liquidação
balance:
 - sheet                 balanço (m) geral
 debit -                 saldo (m) devedor
 gross -                 resultado (m) bruto
 outstanding -           saldo (m) a receber, saldo (m) a pagar
balance sheet auditing   auditoria (f) de balanço
bank:
 - account               conta (f) bancária
 - deposit               depósito (m) bancário
 - draft                 saque (m)
 - overdraft             conta (f) bancária a descoberto
 - statement             extrato (m) bancário
 computer -              banco (m) de dados de computador
 data -                  banco (m) de dados
 safety -                reserva (/) para imprevistos
bankers'draft            saque (m) bancário
bargain                  permuta (f), barganha (f), pechincha (f)
D



SESSAO: IDENTIFICADOR LISTA_PALAVRAS
      ;
IDENTIFICADOR: texto
             ;
LISTA_PALAVRAS: PALAVRA
              | LISTA_PALAVRAS PALAVRA
              ;
PALAVRA: PALAVRA_SIMPLES
       | PALAVRA_COMPOSTA
       ;
PALAVRA_SIMPLES: NOME DEFINICAO
               ;
PALAVRA_COMPOSTA: NOME ':' DEFINICAO TERMOS
                ;
NOME: texto
    ;
DEFINICAO: texto
         | DEFINICAO ',' texto
         |
         ;
TERMOS: TERMO
      | TERMOS TERMO
      ;
TERMO: '-' texto DEFINICAO
     | texto '-' DEFINICAO
     | texto '-' texto DEFINICAO
     ;


<DICT>[ \n]*/({texto}|" "{texto})           {BEGIN(WORD);}              /* consome espaços e quebras de linha desnecessários até que encontre  o primeiro caracter contido em texto.*/
<WORD>^{texto}+(" "{texto}+)*/[^\n]         {yylval.texto=strdup(yytext);return(verbete);} /* reconhece tokens de palavras, permitindo apenas um espaço entre as strings*/
<WORD>^[ ]{letra}+(" "{letra}+)*/[^\n]      {yylval.texto=strdup(yytext);return(termo);} /* reconhece tokens de palavras, permitindo apenas um espaço entre as strings*/
<WORD>{texto}+(" "{texto}+)*                {yylval.texto=strdup(yytext);return(traducao);}
<WORD>[ \t]                         ;                           /* consome espaços e tabulações desncessárias*/
<WORD>.|\n                          {return yytext[0];}         /* retorna todos os tokens de símbolo único, pode gerar erros de sintaxe, mas esse comportamento é desejado.*/

TERMOS: TERMO
    | TERMOS TERMO
    ;

TERMO: '-' palavra TRADUCAO   {printf("teste...\n");}
    | palavra '-' TRADUCAO    {printf("teste...\n");}
    ;
VERBETE: ENTRADA TRADUCAO               {printf("\n");}
    | ENTRADA ':' TRADUCAO TERMOS       {printf("\n");}
    | ENTRADA ':' '\n' TERMOS           {printf("\n");}
    ;





%{
#include <stdio.h>
#include <string.h>
%}

%union{ char * texto;}

%token <texto> palavra;
%token <texto> traducao;
%type  <texto> TRADUCAO;


%%


%%

#include "lex.yy.c"

int yyerror(char *s) { 
    printf("ERRO: %s\n",s); 
    return(0); 
}

int main(){
    yyparse();
    return 0;
}



LISTA_VERBETES: VERBETE
    | LISTA_VERBETES VERBETE
    ;
VERBETE: ENTRADA TERMOS
    ;
ENTRADA: palavra TRADUCAO {printf("EN %s\n", $1);}
    | palavra ':' {strcpy(mem,$1);}
    | palavra ':' TRADUCAO {printf("EN %s\n", $1);};
    ;
TRADUCAO: palavra           {printf("PT %s\n", $1);}
    | TRADUCAO ',' palavra  {printf("PT %s\n", $3);}
    | TRADUCAO ';' palavra  {printf("PT %s\n", $3);}      
    ;
TERMOS: TERMO
    | TERMOS TERMO
    ;
TERMO: termo '-' TRADUCAO  {printf("EN %s %s", $1, mem);
                              printf("+base %s", mem);}
    |
    ;


A FAZER:::

PRECISAMOS ORDENAR AS ORDENS E ORGANIZAR A IMPRESSÃO. PRECISAMOS TAMBÉM FAZER ELE PASSAR ERROS SINTÁTICOS.
